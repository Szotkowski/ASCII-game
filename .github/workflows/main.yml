name: CI/CD for C++ to itch.io

on:
  push:
    branches:
      - master
      - development
  workflow_dispatch:
  
jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
      - name: Checking out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Set up MinGW
        run: |
          choco install mingw --version=13.2.0
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH
  
      - name: Verify MinGW installation
        run: g++ --version
  
      - name: Clean previous build
        run: if (Test-Path -Path "cmake-build-debug") { Remove-Item -Recurse -Force "cmake-build-debug" }
  
      - name: Configure CMake
        run: cmake -G "MinGW Makefiles" -S . -B cmake-build-debug -DCMAKE_BUILD_TYPE=Release
  
      - name: Build
        run: cmake --build cmake-build-debug --config Release

      - name: Decode and save the certificate
        run: |
          $certContent = [System.Convert]::FromBase64String("${{ secrets.CERT_BASE64 }}")
          Set-Content -Path $env:TEMP\code_signing_cert.pfx -Value $certContent

      - name: Sign the executable
        run: |
          $certPath = "$env:TEMP\code_signing_cert.pfx"
          $securePassword = ConvertTo-SecureString "${{ secrets.CERT_PASSWORD }}" -AsPlainText -Force
          $cert = Get-PfxCertificate -FilePath $certPath -Password $securePassword
          Set-AuthenticodeSignature -FilePath cmake-build-debug/ASCII_Game.exe -Certificate $cert -TimestampServer "http://timestamp.digicert.com"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ascii-game
          path: cmake-build-debug/ASCII_Game.exe
  
  upload:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ascii-game
          path: .
  
      - name: Install butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/latest/archive/default
          unzip butler.zip -d butler
          sudo mv butler/butler /usr/local/bin
  
      - name: Upload to Itch.io
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
        run: |
          butler push ASCII_Game.exe your-itch-username/your-game-name:windows
